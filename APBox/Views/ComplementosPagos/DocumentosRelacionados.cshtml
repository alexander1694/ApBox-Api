@model API.Operaciones.ComplementosPagos.ComplementoPago

@{
    ViewBag.Title = "Facturas";
}

@Html.Partial("_ComplementosPagosScripts")


<div class="card card-flush">
    <!--begin::Card header-->
    <div class="card-header">
        <div class="card-title">
            <h2>Asignar documentos relacionados a los pagos</h2>
        </div>
    </div>
    <!--end::Card header-->
    <div class="card-body pt-0">
        <div class="row">
            @using (Html.BeginForm())
            {
@Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.SucursalId)
                                                @Html.HiddenFor(model => model.FechaDocumento)
                                                                @Html.HiddenFor(model => model.ReceptorId)

            <div class="form row">
                @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })

                <h3 class="title-hero">
                    Información del Cliente y CFDi
                </h3>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    <label class="form-label">Fecha Emisión</label>
                    @Html.EditorFor(model => model.FechaDocumento, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FechaDocumento, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ReceptorId, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Receptor.RazonSocial, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ReceptorId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                </div>

                <div class="clearfix"></div>

                <div class="card shadow-sm">
                    <div class="card-header">
                        <h3 class="card-title">
                            Agregar Pago
                        </h3>
                        <div class="card-toolbar">
                            <a href="#" class="icon-separator" id="agregarDetalleDocRelacionado" onclick="agregarFactura()">
                                <!--begin::Svg Icon -->
                                <span class="svg-icon svg-icon-3x">
                                    <img src="~/_CDN/assets/media/icons/duotune/general/gen041.svg" width="40" height="40" />
                                </span>
                                <!--end::Svg Icon-->
                            </a>
                        </div>
                    </div>

                    <div class="card-body row">
                        <div class="form-group col-xs-12 col-sm-6">
                            <label class="form-label">Asignar documentos relacionados</label>
                            @Html.DropDownList("PagoId", null, "Favor de hacer su selección", new { @class = "form-select mb-2" })
                            @Html.ValidationMessageFor(model => model.Pago.Desplegado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, new { @class = "form-label" })
                            @Html.DropDownList("FacturaEmitidaId", null, "Favor de hacer su selección", new { @class = "form-select mb-2", @data_control = "select2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Num Parcialidad</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, new { htmlAttributes = new { @class = "form-control mb-2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Moneda, new { @class = "form-label" })
                            @Html.EnumDropDownListSpecialFor(model => model.Pago.DocumentoRelacionado.Moneda)
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Moneda, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Saldo Anterior</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Pagado</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImportePagado, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImportePagado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="form-label">Imp Insoluto</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, new { htmlAttributes = new { @class = "form-control dinero2" } })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-3 ObjetoImpuesto hiddenDiv">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, new { @class = "form-label" })
                            <p id="DescripcionObjetoImpuesto"></p>
                            @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto)
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, "", new { @class = "text-danger" })
                        </div>
                        <div class="clearfix"></div>
                        <div class="validacion-traslado hiddenDiv">
                            <h3 class="title-hero">
                                Traslado
                            </h3>
                            <div class="row">
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Base, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionBaseT"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Base)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Base, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionImpuestoT"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionTipoFactorT"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionTasaOCuotaT"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionImporteT"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="validacion-retencion hiddenDiv">
                            <h3 class="title-hero">
                                Retencion
                            </h3>
                            <div class="row">
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Base, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionBaseR"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Base)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Base, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionImpuestoR"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionTipoFactorR"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionTasaOCuotaR"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe, htmlAttributes: new { @class = "form-label" })
                                    <p id="DescripcionImporteR"></p>
                                    @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe)
                                    @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        @if (Model.Pagos != null)
                        {
                            var i = 0;
                            foreach (var pago in Model.Pagos)
                            {
                                i++;

            <div class="clearfix"></div>

                                    <div class="col-xs-12">
                                        <div class="card shadow-sm">
                                            <div class="card-header">
                                                <h3 class="card-title form-label">
                                                    <span class="font-blue">
                                                        @i -
                                                    </span>

                                                    @pago.Desplegado
                                                </h3>
                                            </div>
                                            <div class="card-body">
                                                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                    @Html.LabelFor(model => model.Pago.Monto, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.Pago.Monto, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.Pago.Monto, "", new { @class = "text-danger" })
                                                </div>

                                                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                    @Html.LabelFor(model => model.Pago.FechaPago, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.Pago.FechaPago, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.Pago.FechaPago, "", new { @class = "text-danger" })
                                                </div>

                                                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 hiddenDiv">
                                                    @Html.LabelFor(model => model.Pago.Moneda, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.Pago.Moneda, new { htmlAttributes = new { @class = "form-control mb-2", @readonly = "readonly" } })
                                                    @Html.ValidationMessageFor(model => model.Pago.Moneda, "", new { @class = "text-danger" })
                                                </div>

                                                <div class="row" id="@String.Format("documento{0}", pago.Id)">
                                                    @if (pago.DocumentosRelacionados != null)
                                                    {
                                                        foreach (var documentoRelacionado in pago.DocumentosRelacionados)
                                                        {
                            @Html.Partial("~/Views/ComplementosPagos/FacturasDetalles.cshtml", documentoRelacionado)}
                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                                            <div class="clearfix"></div><br />}
                                                    }
                    </div>

                    <div class="clearfix"></div>

                </div>

                <div class="clearfix"></div>

                <div class="separator my-5"></div>

                <div class="d-flex justify-content-end">
                    <!--begin::Button-->
                    <a href="@Url.Action("Index", ViewBag.Controller)" class="btn btn-light me-5">Cancelar</a>
                    <!--end::Button-->
                    
                    <button type="submit" class="btn btn-primary">
                        <span class="indicator-label">Guardar</span>
                    </button>
                </div>

            </div>}

        </div>
    </div>
</div>