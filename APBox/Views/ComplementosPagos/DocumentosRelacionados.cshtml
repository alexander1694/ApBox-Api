@model API.Operaciones.ComplementosPagos.ComplementoPago

@{
    ViewBag.Title = "Facturas";
}

@Html.Partial("_ComplementosPagosScripts")


<div id="page-title">
    <h2>Asignar documentos relacionados a los pagos</h2>
</div>

<div class="panel">
    <div class="panel-body">
        <div class="row">
            @using (Html.BeginForm())
                {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.SucursalId)
                @Html.HiddenFor(model => model.FechaDocumento)
                @Html.HiddenFor(model => model.ReceptorId)

            <div class="form">
                @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })

                <h3 class="title-hero">
                    Información del Cliente y CFDi
                </h3>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @*@Html.LabelFor(model => model.FechaDocumento, htmlAttributes: new { @class = "control-label" })*@
                    <label class="control-label">Fecha Emisión</label>
                    @Html.EditorFor(model => model.FechaDocumento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FechaDocumento, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.ReceptorId, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Receptor.RazonSocial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.ReceptorId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-4">
                    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                </div>
                
                <div class="clearfix"></div>

                <div class="content-box">
                    <h3 class="content-box-header bg-blue">
                        <i class="glyph-icon icon-cog"></i>
                        Agregar Pago
                        <div class="header-buttons-separator">
                            <a href="#" class="icon-separator" id="agregarDetalleDocRelacionado" onclick="agregarFactura()">
                                <i class="glyph-icon icon-plus"></i>
                            </a>
                        </div>
                    </h3>

                    <div class="content-box-wrapper">
                        <div class="form-group col-xs-12 col-sm-6">
                            <label class="control-label">Asignar documentos relacionados</label>
                            @*@Html.LabelFor(model => model.Pago.Desplegado, new { @class = "control-label" })*@
                            @Html.DropDownList("PagoId", null, "Favor de hacer su selección", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Pago.Desplegado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-6">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, new { @class = "control-label" })
                            @Html.DropDownList("FacturaEmitidaId", null, "Favor de hacer su selección", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.FacturaEmitidaId, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="control-label">Num Parcialidad</label>
                            @*@Html.LabelFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, new { @class = "control-label" })*@
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.NumeroParcialidad, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Moneda, new { @class = "control-label" })
                            @Html.EnumDropDownListSpecialFor(model => model.Pago.DocumentoRelacionado.Moneda)
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Moneda, "", new { @class = "text-danger" })
                        </div>

                        @*<div class="form-group col-xs-12 col-sm-2">
                            <label class="control-label">Equivalencia</label>
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.EquivalenciaDR, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.EquivalenciaDR, "", new { @class = "text-danger" })
                        </div>*@

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="control-label">Imp Saldo Anterior</label>
                            @*@Html.LabelFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, new { @class = "control-label" })*@
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, new { @class = "form-control dinero2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoAnterior, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="control-label">Imp Pagado</label>
                            @*@Html.LabelFor(model => model.Pago.DocumentoRelacionado.ImportePagado, new { @class = "control-label" })*@
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImportePagado, new { @class = "form-control dinero2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImportePagado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-2">
                            <label class="control-label">Imp Insoluto</label>
                            @*@Html.LabelFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, new { @class = "control-label" })*@
                            @Html.EditorFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, new { @class = "form-control dinero2" })
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ImporteSaldoInsoluto, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-xs-12 col-sm-3 ObjetoImpuesto" hidden>
                            @Html.LabelFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, new { @class = "control-label" })
                            @*@Html.DropDownListFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, (IEnumerable<SelectListItem>)ViewBag.objetoImpuesto, "Favor de hacer su selección", new { @class = "form-control", @readonly = "readonly" })*@
                            <p id="DescripcionObjetoImpuesto"></p>
                            @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto)
                            @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.ObjetoImpuesto, "", new { @class = "text-danger" })
                        </div>
                        <div class="clearfix"></div>
                        <div class="validacion-traslado" hidden>
                            <h3 class="title-hero">
                                Traslado
                            </h3>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Base, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionBaseT"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Base)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Base, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionImpuestoT"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Impuesto, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionTipoFactorT"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.TipoFactor, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionTasaOCuotaT"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.TasaOCuota, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionImporteT"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Traslado.Importe, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="validacion-retencion" hidden>
                            <h3 class="title-hero">
                                Retencion
                            </h3>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Base, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionBaseR"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Base)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Base, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionImpuestoR"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Impuesto, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionTipoFactorR"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.TipoFactor, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionTasaOCuotaR"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.TasaOCuota, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                @Html.LabelFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe, htmlAttributes: new { @class = "control-label" })
                                <p id="DescripcionImporteR"></p>
                                @Html.HiddenFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe)
                                @Html.ValidationMessageFor(model => model.Pago.DocumentoRelacionado.Retencion.Importe, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (Model.Pagos != null)
                        {
                            var i = 0;
                            foreach (var pago in Model.Pagos)
                            {
                                i++;

                    <div class="clearfix"></div>

                                            <div class="col-xs-12">
                                                <div class="content-box">
                                                    <h3 class="content-box-header bg-default">
                                                        <i class="glyph-icon icon-inbox"></i>
                                                        <span class="font-blue">
                                                            @i -
                                                        </span>

                                                        @pago.Desplegado
                                                    </h3>

                                                    <div class="content-box-wrapper">
                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3" hidden>
                                                            @Html.LabelFor(model => model.Pago.Monto, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.Pago.Monto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.Monto, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3" hidden>
                                                            @Html.LabelFor(model => model.Pago.FechaPago, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.Pago.FechaPago, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.FechaPago, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3" hidden>
                                                            @Html.LabelFor(model => model.Pago.Moneda, htmlAttributes: new { @class = "control-label" })
                                                            @Html.EditorFor(model => model.Pago.Moneda, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                                            @Html.ValidationMessageFor(model => model.Pago.Moneda, "", new { @class = "text-danger" })
                                                        </div>

                                                        <div class="row" id="@String.Format("documento{0}", pago.Id)">
                                                            @if (pago.DocumentosRelacionados != null)
                                                            {
                                                                foreach (var documentoRelacionado in pago.DocumentosRelacionados)
                                                                {
                                    @Html.Partial("~/Views/ComplementosPagos/FacturasDetalles.cshtml", documentoRelacionado)}
                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                                                    <div class="clearfix"></div>}
                                                            }
                    </div>

                        <div class="clearfix"></div>

                    </div>

                <div class="clearfix"></div>

                <hr />

                <div class="form-group pull-right">
                    <button type="button" class="btn btn-alt btn-hover btn-default" onclick="location.href='@Url.Action("Index")';">
                        <span>Regresar</span>
                        <i class="glyph-icon icon-arrow-left"></i>
                    </button>
                    <button type="submit" class="btn btn-alt btn-hover btn-blue-alt">
                        <span>Crear</span>
                        <i class="glyph-icon icon-arrow-right"></i>
                    </button>
                </div>

            </div>
                }

        </div>
    </div>
</div>